#Set debug_morph
#Set debug_subst
#Set debug_tpof
#Set suppress_eqterm_stack

test : * =
  fix nat : * = 
          self n . ! C : (nat -> *) . (! n : nat. (C (succ n))) -> (C zero) -> (C conv n to nat by refl, unfold) ,
      zero : nat = 
           conv \ C : nat -> * . \ s : (! n : nat. (C (succ n))) . \ z : (C zero) . z 
           to nat 
           by (! C : refl . (! s : refl . (! z : refl . (C unfold)))),
              [ unfold ; substself ]
             
           ,
      succ : nat -> nat = 
           conv \ n : nat . 
                   \ C : nat -> * . \ s : (! n : nat. (C (succ n))) . \ z : (C zero) . (s n) 
           to ! n : nat . nat
           by (! n : nat . ! C : refl . refl -> refl -> (C [ (unfold n) ; eval ])) ,
              (! n : nat . [ unfold ; substself ] )
  in
     nat